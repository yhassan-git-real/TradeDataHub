<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Font Families -->
    <FontFamily x:Key="PrimaryFontFamily">Segoe UI</FontFamily>
    <FontFamily x:Key="SecondariFontFamily">Segoe UI</FontFamily>

    <!-- Font Sizes -->
    <system:Double xmlns:system="clr-namespace:System;assembly=mscorlib" x:Key="FontSize.XSmall">10</system:Double>
    <system:Double xmlns:system="clr-namespace:System;assembly=mscorlib" x:Key="FontSize.Small">12</system:Double>
    <system:Double xmlns:system="clr-namespace:System;assembly=mscorlib" x:Key="FontSize.Medium">14</system:Double>
    <system:Double xmlns:system="clr-namespace:System;assembly=mscorlib" x:Key="FontSize.Large">16</system:Double>
    <system:Double xmlns:system="clr-namespace:System;assembly=mscorlib" x:Key="FontSize.XLarge">18</system:Double>
    <system:Double xmlns:system="clr-namespace:System;assembly=mscorlib" x:Key="FontSize.XXLarge">20</system:Double>

    <!-- Font Weights -->
    <FontWeight x:Key="FontWeight.Light">Light</FontWeight>
    <FontWeight x:Key="FontWeight.Normal">Normal</FontWeight>
    <FontWeight x:Key="FontWeight.Medium">Medium</FontWeight>
    <FontWeight x:Key="FontWeight.SemiBold">SemiBold</FontWeight>
    <FontWeight x:Key="FontWeight.Bold">Bold</FontWeight>

    <!-- Primary Colors -->
    <Color x:Key="Color.Primary">#0078D4</Color>
    <Color x:Key="Color.Primary.Light">#40E0FF</Color>
    <Color x:Key="Color.Primary.Dark">#005A9E</Color>
    <Color x:Key="Color.Primary.Hover">#106EBE</Color>
    <Color x:Key="Color.Primary.Pressed">#005A9E</Color>

    <!-- Neutral Colors -->
    <Color x:Key="Color.Neutral.White">#FFFFFF</Color>
    <Color x:Key="Color.Neutral.Gray10">#FAFAFA</Color>
    <Color x:Key="Color.Neutral.Gray20">#F5F5F5</Color>
    <Color x:Key="Color.Neutral.Gray30">#EDEDED</Color>
    <Color x:Key="Color.Neutral.Gray40">#E1E1E1</Color>
    <Color x:Key="Color.Neutral.Gray50">#D1D1D1</Color>
    <Color x:Key="Color.Neutral.Gray60">#B3B3B3</Color>
    <Color x:Key="Color.Neutral.Gray70">#8A8A8A</Color>
    <Color x:Key="Color.Neutral.Gray80">#6C6C6C</Color>
    <Color x:Key="Color.Neutral.Gray90">#4A4A4A</Color>
    <Color x:Key="Color.Neutral.Gray100">#323130</Color>

    <!-- Semantic Colors -->
    <Color x:Key="Color.Success">#107C10</Color>
    <Color x:Key="Color.Success.Light">#DFF6DD</Color>
    <Color x:Key="Color.Warning">#F7630C</Color>
    <Color x:Key="Color.Warning.Light">#FEF7E3</Color>
    <Color x:Key="Color.Error">#D13438</Color>
    <Color x:Key="Color.Error.Light">#FDE7E9</Color>
    <Color x:Key="Color.Info">#0078D4</Color>
    <Color x:Key="Color.Info.Light">#DEECF9</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="Brush.Primary" Color="{StaticResource Color.Primary}"/>
    <SolidColorBrush x:Key="Brush.Primary.Hover" Color="{StaticResource Color.Primary.Hover}"/>
    <SolidColorBrush x:Key="Brush.Primary.Pressed" Color="{StaticResource Color.Primary.Pressed}"/>

    <SolidColorBrush x:Key="Brush.Background" Color="{StaticResource Color.Neutral.White}"/>
    <SolidColorBrush x:Key="Brush.Background.Secondary" Color="{StaticResource Color.Neutral.Gray10}"/>
    <SolidColorBrush x:Key="Brush.Background.Tertiary" Color="{StaticResource Color.Neutral.Gray20}"/>

    <SolidColorBrush x:Key="Brush.Text.Primary" Color="{StaticResource Color.Neutral.Gray100}"/>
    <SolidColorBrush x:Key="Brush.Text.Secondary" Color="{StaticResource Color.Neutral.Gray80}"/>
    <SolidColorBrush x:Key="Brush.Text.Tertiary" Color="{StaticResource Color.Neutral.Gray60}"/>
    <SolidColorBrush x:Key="Brush.Text.OnPrimary" Color="{StaticResource Color.Neutral.White}"/>

    <SolidColorBrush x:Key="Brush.Border" Color="{StaticResource Color.Neutral.Gray40}"/>
    <SolidColorBrush x:Key="Brush.Border.Light" Color="{StaticResource Color.Neutral.Gray30}"/>
    <SolidColorBrush x:Key="Brush.Border.Focus" Color="{StaticResource Color.Primary}"/>

    <SolidColorBrush x:Key="Brush.Success" Color="{StaticResource Color.Success}"/>
    <SolidColorBrush x:Key="Brush.Success.Light" Color="{StaticResource Color.Success.Light}"/>
    <SolidColorBrush x:Key="Brush.Warning" Color="{StaticResource Color.Warning}"/>
    <SolidColorBrush x:Key="Brush.Warning.Light" Color="{StaticResource Color.Warning.Light}"/>
    <SolidColorBrush x:Key="Brush.Error" Color="{StaticResource Color.Error}"/>
    <SolidColorBrush x:Key="Brush.Error.Light" Color="{StaticResource Color.Error.Light}"/>
    <SolidColorBrush x:Key="Brush.Info" Color="{StaticResource Color.Info}"/>
    <SolidColorBrush x:Key="Brush.Info.Light" Color="{StaticResource Color.Info.Light}"/>

    <!-- Corner Radius -->
    <CornerRadius x:Key="CornerRadius.None">0</CornerRadius>
    <CornerRadius x:Key="CornerRadius.Small">2</CornerRadius>
    <CornerRadius x:Key="CornerRadius.Medium">4</CornerRadius>
    <CornerRadius x:Key="CornerRadius.Large">6</CornerRadius>
    <CornerRadius x:Key="CornerRadius.XLarge">8</CornerRadius>
    <CornerRadius x:Key="CornerRadius.Pill">16</CornerRadius>

    <!-- Spacing Tokens -->
    <Thickness x:Key="Spacing.None">0</Thickness>
    <Thickness x:Key="Spacing.XSmall">2</Thickness>
    <Thickness x:Key="Spacing.Small">4</Thickness>
    <Thickness x:Key="Spacing.Medium">8</Thickness>
    <Thickness x:Key="Spacing.Large">12</Thickness>
    <Thickness x:Key="Spacing.XLarge">16</Thickness>
    <Thickness x:Key="Spacing.XXLarge">20</Thickness>
    <Thickness x:Key="Spacing.XXXLarge">24</Thickness>

    <!-- Animation Durations -->
    <Duration x:Key="Animation.Fast">0:0:0.15</Duration>
    <Duration x:Key="Animation.Normal">0:0:0.25</Duration>
    <Duration x:Key="Animation.Slow">0:0:0.35</Duration>

    <!-- Animation Easing -->
    <CubicEase x:Key="Ease.Standard" EasingMode="EaseInOut"/>
    <QuadraticEase x:Key="Ease.Decelerate" EasingMode="EaseOut"/>
    <QuadraticEase x:Key="Ease.Accelerate" EasingMode="EaseIn"/>

    <!-- Shadow Effects -->
    <DropShadowEffect x:Key="Shadow.Small" Color="Black" ShadowDepth="1" BlurRadius="4" Opacity="0.1"/>
    <DropShadowEffect x:Key="Shadow.Medium" Color="Black" ShadowDepth="2" BlurRadius="8" Opacity="0.15"/>
    <DropShadowEffect x:Key="Shadow.Large" Color="Black" ShadowDepth="4" BlurRadius="16" Opacity="0.2"/>

    <!-- Typography Styles -->
    <Style x:Key="Typography.Header1" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.XXLarge}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight.Bold}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Primary}"/>
        <Setter Property="LineHeight" Value="28"/>
    </Style>

    <Style x:Key="Typography.Header2" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.XLarge}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight.Bold}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Primary}"/>
        <Setter Property="LineHeight" Value="24"/>
    </Style>

    <Style x:Key="Typography.Header3" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Large}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight.SemiBold}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Primary}"/>
        <Setter Property="LineHeight" Value="22"/>
    </Style>

    <Style x:Key="Typography.Body" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Medium}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight.Normal}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Primary}"/>
        <Setter Property="LineHeight" Value="20"/>
    </Style>

    <Style x:Key="Typography.Label" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Small}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight.Medium}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Primary}"/>
        <Setter Property="LineHeight" Value="16"/>
    </Style>

    <Style x:Key="Typography.Caption" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Small}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight.Normal}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Secondary}"/>
        <Setter Property="LineHeight" Value="16"/>
    </Style>

    <!-- Default Styles Override -->
    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Medium}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight.Normal}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Primary}"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Medium}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight.Medium}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Primary}"/>
    </Style>

    <!-- Modern Button Styles -->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Medium}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight.Medium}"/>
        <Setter Property="Background" Value="{StaticResource Brush.Background.Secondary}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Primary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Light}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="ScaleTransform" ScaleX="1" ScaleY="1"/>
                        </Border.RenderTransform>
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                      To="{StaticResource Color.Primary}"
                                                      Duration="{StaticResource Animation.Fast}"
                                                      EasingFunction="{StaticResource Ease.Standard}"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                      To="{StaticResource Color.Neutral.White}"
                                                      Duration="{StaticResource Animation.Fast}"
                                                      EasingFunction="{StaticResource Ease.Standard}"/>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                      To="{StaticResource Color.Primary}"
                                                      Duration="{StaticResource Animation.Fast}"
                                                      EasingFunction="{StaticResource Ease.Standard}"/>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                       Storyboard.TargetProperty="ScaleX"
                                                       To="1.02"
                                                       Duration="{StaticResource Animation.Fast}"
                                                       EasingFunction="{StaticResource Ease.Standard}"/>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                       Storyboard.TargetProperty="ScaleY"
                                                       To="1.02"
                                                       Duration="{StaticResource Animation.Fast}"
                                                       EasingFunction="{StaticResource Ease.Standard}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                      Duration="{StaticResource Animation.Fast}"
                                                      EasingFunction="{StaticResource Ease.Standard}"/>
                                        <ColorAnimation Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                      Duration="{StaticResource Animation.Fast}"
                                                      EasingFunction="{StaticResource Ease.Standard}"/>
                                        <ColorAnimation Storyboard.TargetName="Border"
                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                      Duration="{StaticResource Animation.Fast}"
                                                      EasingFunction="{StaticResource Ease.Standard}"/>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                       Storyboard.TargetProperty="ScaleX"
                                                       To="1.0"
                                                       Duration="{StaticResource Animation.Fast}"
                                                       EasingFunction="{StaticResource Ease.Standard}"/>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                       Storyboard.TargetProperty="ScaleY"
                                                       To="1.0"
                                                       Duration="{StaticResource Animation.Fast}"
                                                       EasingFunction="{StaticResource Ease.Standard}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                       Storyboard.TargetProperty="ScaleX"
                                                       To="0.98"
                                                       Duration="0:0:0.1"
                                                       EasingFunction="{StaticResource Ease.Standard}"/>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                       Storyboard.TargetProperty="ScaleY"
                                                       To="0.98"
                                                       Duration="0:0:0.1"
                                                       EasingFunction="{StaticResource Ease.Standard}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                       Storyboard.TargetProperty="ScaleX"
                                                       Duration="0:0:0.1"
                                                       EasingFunction="{StaticResource Ease.Standard}"/>
                                        <DoubleAnimation Storyboard.TargetName="ScaleTransform"
                                                       Storyboard.TargetProperty="ScaleY"
                                                       Duration="0:0:0.1"
                                                       EasingFunction="{StaticResource Ease.Standard}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Brush.Background.Tertiary}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.Text.Tertiary}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Brush.Border.Light}"/>
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary Button Style -->
    <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Background" Value="{StaticResource Brush.Primary}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.OnPrimary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Brush.Primary.Hover}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Brush.Primary.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Brush.Primary.Pressed}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Brush.Primary.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Brush.Background.Tertiary}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.Text.Tertiary}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Brush.Border.Light}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Success/Generate Button Style (Light Green) -->
    <Style x:Key="SuccessButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Background" Value="#28A745"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#28A745"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter"
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Content}"
                                        TextBlock.Foreground="{TemplateBinding Foreground}"
                                        TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                        TextBlock.FontSize="{TemplateBinding FontSize}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#34CE57"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#34CE57"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#1E7E34"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#1E7E34"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="#A0A0A0"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#A0A0A0"/>
                            <Setter Property="Foreground" Value="#E0E0E0"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Danger/Cancel Button Style (Light Red) -->
    <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Background" Value="#DC3545"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#DC3545"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#E85A67"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#E85A67"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#C82333"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#C82333"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Brush.Background.Tertiary}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.Text.Tertiary}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Brush.Border.Light}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Neutral/Reset Button Style (Light Gray) -->
    <Style x:Key="NeutralButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Background" Value="#6C757D"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#6C757D"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#868E96"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#868E96"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#5A6268"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="#5A6268"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Brush.Background.Tertiary}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.Text.Tertiary}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Brush.Border.Light}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Animation Styles -->
    <!-- Fade In Animation Style -->
    <Style x:Key="FadeInAnimation" TargetType="FrameworkElement">
        <Setter Property="Opacity" Value="0"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                       To="1.0"
                                       Duration="{StaticResource Animation.Normal}"
                                       EasingFunction="{StaticResource Ease.Decelerate}"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Slide In From Right Animation Style -->
    <Style x:Key="SlideInFromRightAnimation" TargetType="FrameworkElement">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="50" Y="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Opacity" Value="0"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                       To="0"
                                       Duration="{StaticResource Animation.Normal}"
                                       EasingFunction="{StaticResource Ease.Decelerate}"/>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                       To="1.0"
                                       Duration="{StaticResource Animation.Normal}"
                                       EasingFunction="{StaticResource Ease.Decelerate}"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Scale Up Animation Style -->
    <Style x:Key="ScaleUpAnimation" TargetType="FrameworkElement">
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Opacity" Value="0"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                       To="1.0"
                                       Duration="{StaticResource Animation.Normal}"
                                       EasingFunction="{StaticResource Ease.Decelerate}"/>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                       To="1.0"
                                       Duration="{StaticResource Animation.Normal}"
                                       EasingFunction="{StaticResource Ease.Decelerate}"/>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                       To="1.0"
                                       Duration="{StaticResource Animation.Normal}"
                                       EasingFunction="{StaticResource Ease.Decelerate}"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Expandable Panel Style -->
    <Style x:Key="ExpandablePanel" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Brush.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Light}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="{StaticResource CornerRadius.Medium}"/>
        <Setter Property="Effect" Value="{StaticResource Shadow.Small}"/>
        <Setter Property="ClipToBounds" Value="True"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="1"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Collapsible Content Style -->
    <Style x:Key="CollapsibleContent" TargetType="FrameworkElement">
        <Setter Property="MaxHeight" Value="999999"/>
        <Setter Property="Opacity" Value="1"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsExpanded}" Value="False">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="MaxHeight"
                                           To="0"
                                           Duration="{StaticResource Animation.Normal}"
                                           EasingFunction="{StaticResource Ease.Standard}"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                           To="0"
                                           Duration="{StaticResource Animation.Fast}"
                                           EasingFunction="{StaticResource Ease.Standard}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="MaxHeight"
                                           To="999999"
                                           Duration="{StaticResource Animation.Normal}"
                                           EasingFunction="{StaticResource Ease.Standard}"/>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                           To="1"
                                           Duration="{StaticResource Animation.Normal}"
                                           EasingFunction="{StaticResource Ease.Standard}"/>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Modern ComboBox Style -->
    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Medium}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight.Normal}"/>
        <Setter Property="Background" Value="{StaticResource Brush.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Primary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Light}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- Modern TextBox Style -->
    <Style x:Key="ModernTextBox" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Medium}"/>
        <Setter Property="FontWeight" Value="{StaticResource FontWeight.Normal}"/>
        <Setter Property="Background" Value="{StaticResource Brush.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Primary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Light}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- Set Default Styles for Buttons Only -->
    <Style TargetType="Button" BasedOn="{StaticResource ModernButton}"/>

    <!-- Modern Toggle Switch Style -->
    <Style x:Key="ModernToggleSwitch" TargetType="Border">
        <Setter Property="Background" Value="#F8F9FA"/>
        <Setter Property="BorderBrush" Value="#D1D5DB"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="16"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" ShadowDepth="0" BlurRadius="4" Opacity="0.08"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Toggle Option Style -->
    <Style x:Key="ToggleOption" TargetType="Border">
        <Setter Property="CornerRadius" Value="14"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
            <Trigger Property="Tag" Value="Active">
                <Setter Property="Background" Value="#0078D4"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="#0078D4" ShadowDepth="0" BlurRadius="4" Opacity="0.2"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Toggle Text Style -->
    <Style x:Key="ToggleText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="#374151"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=Tag}" Value="Active">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Modern ToggleButton Style -->
    <Style x:Key="ModernToggleButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource Brush.Background}"/>
        <Setter Property="Foreground" Value="{StaticResource Brush.Text.Primary}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border.Light}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Background.Secondary}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Background.Tertiary}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource Brush.Primary}"/>
                            <Setter Property="Foreground" Value="{StaticResource Brush.Text.OnPrimary}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{StaticResource Brush.Primary.Hover}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>

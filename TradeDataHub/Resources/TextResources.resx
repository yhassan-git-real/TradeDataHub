<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion. The mimetype is used for serialized objects.
    
    
    The resheader rows contain the headers for the resheader object.
    -->
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  
  <data name="UserManualText" xml:space="preserve">
    <value>Trade Data Hub - User Manual

Welcome to Trade Data Hub! This comprehensive tool helps you import and export trade data efficiently.

Getting Started:
1. Select your operation type (Import or Export)
2. Choose your database view and stored procedure
3. Set your date range using the month pickers
4. Configure your parameters
5. Click Generate to process your data

Features:
• Advanced filtering capabilities
• Real-time progress monitoring
• Automatic Excel file generation
• Comprehensive logging system
• Keyboard shortcuts for efficiency

For detailed instructions on each feature, please refer to the individual help sections or contact support.</value>
  </data>
  
  <data name="QuickStartText" xml:space="preserve">
    <value>Quick Start Guide:

Import Process:
1. Select 'Import' radio button
2. Choose database view (typically 'ImportView')
3. Select stored procedure
4. Set date range (From Month to To Month)
5. Click 'Generate Import Files'

Export Process:
1. Select 'Export' radio button
2. Choose database view (typically 'ExportView')
3. Select stored procedure
4. Set date range (From Month to To Month)
5. Click 'Generate Export Files'

Tips:
• Use F5 to refresh the interface
• Monitor progress in the status panel
• Check the Logs folder for detailed information
• Generated files appear in IMPORT_Excel or EXPORT_Excel folders</value>
  </data>
  
  <data name="KeyboardShortcutsText" xml:space="preserve">
    <value>Keyboard Shortcuts:

File Operations:
Ctrl+N - New
Ctrl+O - Open
Ctrl+S - Save
Ctrl+Shift+S - Save As
Alt+F4 - Exit

Edit Operations:
Ctrl+Z - Undo
Ctrl+Y - Redo
Ctrl+X - Cut
Ctrl+C - Copy
Ctrl+V - Paste
Ctrl+A - Select All

View Operations:
F5 - Refresh
F11 - Full Screen

Help:
F1 - User Manual</value>
  </data>
  
  <data name="AboutText" xml:space="preserve">
    <value>Trade Data Hub v2.0

A comprehensive solution for importing and exporting trade data with advanced filtering and monitoring capabilities.

Features:
• Excel file generation for trade data
• Advanced parameter filtering
• Real-time processing monitoring
• Comprehensive logging system
• User-friendly interface with keyboard shortcuts

© 2025 Trade Data Hub. All rights reserved.

For support and updates, please visit our website or contact the development team.</value>
  </data>
</root>
